"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7837],{28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>c});var n=r(96540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}},31489:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"system-architecture/version-control","title":"Version Control","description":"Version control will primarily be through Github and git commands. Branches must be made for every feature that the respective member is working on. Whenever that member is done with the feature it will be put into a merge request where it is required that another member must review the code before it can be pushed onto the main branch.","source":"@site/docs/system-architecture/version-control.md","sourceDirName":"system-architecture","slug":"/system-architecture/version-control","permalink":"/project-002-highlighting/docs/system-architecture/version-control","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Fall/project-002-highlighting/edit/main/documentation/docs/system-architecture/version-control.md","tags":[],"version":"current","lastUpdatedBy":"Jude","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Sequence-Diagrams","permalink":"/project-002-highlighting/docs/system-architecture/Sequence-Diagrams"},"next":{"title":"Component Overview","permalink":"/project-002-highlighting/docs/system-architecture/component-overview"}}');var o=r(74848),i=r(28453);const s={sidebar_position:5},c="Version Control",a={},h=[];function m(e){const t={h1:"h1",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"version-control",children:"Version Control"})}),"\n",(0,o.jsxs)(t.p,{children:["Version control will primarily be through ",(0,o.jsx)(t.strong,{children:"Github"})," and ",(0,o.jsx)(t.strong,{children:"git"})," commands. Branches must be made for every feature that the respective member is working on. Whenever that member is done with the feature it will be put into a merge request where it is ",(0,o.jsx)(t.strong,{children:"required"})," that another member must review the code before it can be pushed onto the main branch."]}),"\n",(0,o.jsxs)(t.p,{children:["The main branch is protected by ",(0,o.jsx)(t.strong,{children:"branch protections"})," which require approval from a member other then the member who pushed the merge request in order to maintain the main branch remains stable."]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}}}]);